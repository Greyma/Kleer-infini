const request = require('supertest');
const app = require('../../server');

describe('üè• Tests endpoints de sant√© - DevOps', () => {
  
  test('GET /api/health - Endpoint de sant√© d√©taill√©', async () => {
    const response = await request(app)
      .get('/api/health')
      .expect(200);

    // V√©rifications de la structure
    expect(response.body).toHaveProperty('status', 'UP');
    expect(response.body).toHaveProperty('timestamp');
    expect(response.body).toHaveProperty('service');
    expect(response.body).toHaveProperty('version');
    expect(response.body).toHaveProperty('environment');
    expect(response.body).toHaveProperty('uptime');
    expect(response.body).toHaveProperty('memory');
    expect(response.body).toHaveProperty('endpoints');

    // V√©rifications sp√©cifiques
    expect(response.body.service).toBe('Garoui Electricit√© Backend');
    expect(response.body.endpoints).toHaveProperty('auth', '/api/auth');
    expect(response.body.endpoints).toHaveProperty('services', '/api/services');
    
    console.log('‚úÖ Endpoint /api/health fonctionne correctement');
  });

  test('GET /api/ping - Test simple monitoring', async () => {
    const response = await request(app)
      .get('/api/ping')
      .expect(200);

    expect(response.body).toHaveProperty('message', 'pong');
    expect(response.body).toHaveProperty('timestamp');
    
    console.log('‚úÖ Endpoint /api/ping r√©pond correctement');
  });

  test('GET /api/status - Statut g√©n√©ral API', async () => {
    const response = await request(app)
      .get('/api/status')
      .expect(200);

    expect(response.body).toHaveProperty('message');
    expect(response.body.message).toContain('op√©rationnelle');
    expect(response.body).toHaveProperty('availableEndpoints');
    expect(Array.isArray(response.body.availableEndpoints)).toBe(true);
    
    console.log('‚úÖ Endpoint /api/status liste les routes correctement');
  });

  test('V√©rification temps de r√©ponse < 500ms', async () => {
    const start = Date.now();
    
    await request(app)
      .get('/api/ping')
      .expect(200);
      
    const responseTime = Date.now() - start;
    expect(responseTime).toBeLessThan(500);
    
    console.log(`‚úÖ Temps de r√©ponse: ${responseTime}ms (< 500ms)`);
  });

});